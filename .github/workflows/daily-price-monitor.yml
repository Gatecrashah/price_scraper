name: Daily Björn Borg Sock Price Monitor

on:
  schedule:
    # Run daily at 9:00 AM UTC (11:00 AM Finnish time)
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  monitor-prices:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Allow writing to repository
      issues: write    # Allow creating GitHub issues
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run sock price monitor
      env:
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        echo "🧦 Starting Björn Borg sock price monitoring..."
        python price_monitor.py
        echo "✅ Price monitoring completed!"
    
    - name: Commit updated price history
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Always pull latest changes first to avoid conflicts
        git pull origin main --rebase || git pull origin main
        
        # Add price history if it exists
        if [ -f "price_history.json" ]; then
          git add price_history.json
          echo "📊 Price history file found and staged"
          
          # Check if there are actually changes to commit
          if git diff --staged --quiet; then
            echo "📊 No changes to price history - no commit needed"
          else
            git commit -m "📊 Update price history - $(date +'%Y-%m-%d %H:%M UTC')"
            
            # Push with retry logic in case of conflicts
            for i in {1..3}; do
              if git push origin main; then
                echo "✅ Price history pushed successfully"
                break
              else
                echo "⚠️ Push failed, attempt $i/3. Pulling and retrying..."
                git pull origin main --rebase || git pull origin main
                sleep 2
              fi
            done
          fi
        else
          echo "📊 No price history file found - creating initial commit marker"
          echo "This directory will contain price history data" > .price_history_placeholder
          git add .price_history_placeholder
          git commit -m "📊 Initialize price history tracking - $(date +'%Y-%m-%d %H:%M UTC')" || true
          git push origin main || true
        fi